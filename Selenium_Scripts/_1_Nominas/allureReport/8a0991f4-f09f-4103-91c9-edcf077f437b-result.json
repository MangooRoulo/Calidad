{"name": "test_AccesoNominas", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//body[1]/div[3]/div[2]/div[1]/div[1]/div[4]/div[1]/section[2]/div[3]/div[1]/div[1]/div[1]/table[1]/tbody[1]/tr[2]/td[2]/div[1]/div[1]/div[1]/button[1]/div[1]/i[1]\"}\n  (Session info: chrome=134.0.6998.36); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00FEB5A3+24387]\n\t(No symbol) [0x00F75904]\n\t(No symbol) [0x00E50753]\n\t(No symbol) [0x00E98BA9]\n\t(No symbol) [0x00E98EFB]\n\t(No symbol) [0x00EE19C2]\n\t(No symbol) [0x00EBD894]\n\t(No symbol) [0x00EDF138]\n\t(No symbol) [0x00EBD646]\n\t(No symbol) [0x00E8C59F]\n\t(No symbol) [0x00E8D8E4]\n\tGetHandleVerifier [0x012ED883+3179043]\n\tGetHandleVerifier [0x01306CF9+3282585]\n\tGetHandleVerifier [0x0130167C+3260444]\n\tGetHandleVerifier [0x01084330+650448]\n\t(No symbol) [0x00F7ED0D]\n\t(No symbol) [0x00F7BAF8]\n\t(No symbol) [0x00F7BC99]\n\t(No symbol) [0x00F6E530]\n\tBaseThreadInitThunk [0x76747BA9+25]\n\tRtlInitializeExceptionChain [0x77D9C28B+107]\n\tRtlClearBits [0x77D9C20F+191]", "trace": "driver_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"42f6e90b0e84cba6980f6ea74e86325d\")>\n\n    @allure.feature('Nominas Test')\n    def test_AccesoNominas(driver_setup):\n        driver = driver_setup\n    \n        Ordenamientos = {\n            \"Estudiante_1\": {\n                \"Orden\": \"1\",\n                \"Primer_Apellido\": \"Diaz\",\n                \"Segundo_Apellido\": \"Mendoza\",\n                \"Nombre\": \"Sofia\",\n                \"ID\": \"2181782-1\"\n            },\n            \"Estudiante_2\": {\n                \"Orden\": \"3\",\n                \"Primer_Apellido\": \"Gonadasdzalez\",\n                \"Segundo_Apellido\": \"Lopez\",\n                \"Nombre\": \"Maria\",\n                \"ID\": \"2987505-7\"\n            },\n            \"Estudiante_3\": {\n                \"Orden\": \"5\",\n                \"Primer_Apellido\": \"Martinez\",\n                \"Segundo_Apellido\": \"Sanchez\",\n                \"Nombre\": \"Juan\",\n                \"ID\": \"8571154-7\"\n            }\n        }\n    \n        try:\n            funcion = global_functions(driver)\n            funcionNominas = nominas_functions(driver)\n    \n            funcion.inicioSesion()\n            funcionNominas.AccesoNominas()\n>           funcionNominas.Ordenamientossasasd()\n\ntest_2_Ordenamientos.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\Funciones_Nominas\\Funciones_Nominas.py:165: in Ordenamientossasasd\n    self.driver.find_element(By.XPATH, Campos.BotonDespliegueOrdenamiento).click()\nC:\\Users\\steve\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:888: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\steve\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023697A08A50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x76747BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77D9C28B+107]\\\\n\\\\tRtlClearBits [0x77D9C20F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//body[1]/div[3]/div[2]/div[1]/div[1]/div[4]/div[1]/section[2]/div[3]/div[1]/div[1]/div[1]/table[1]/tbody[1]/tr[2]/td[2]/div[1]/div[1]/div[1]/button[1]/div[1]/i[1]\"}\nE         (Session info: chrome=134.0.6998.36); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00FEB5A3+24387]\nE       \t(No symbol) [0x00F75904]\nE       \t(No symbol) [0x00E50753]\nE       \t(No symbol) [0x00E98BA9]\nE       \t(No symbol) [0x00E98EFB]\nE       \t(No symbol) [0x00EE19C2]\nE       \t(No symbol) [0x00EBD894]\nE       \t(No symbol) [0x00EDF138]\nE       \t(No symbol) [0x00EBD646]\nE       \t(No symbol) [0x00E8C59F]\nE       \t(No symbol) [0x00E8D8E4]\nE       \tGetHandleVerifier [0x012ED883+3179043]\nE       \tGetHandleVerifier [0x01306CF9+3282585]\nE       \tGetHandleVerifier [0x0130167C+3260444]\nE       \tGetHandleVerifier [0x01084330+650448]\nE       \t(No symbol) [0x00F7ED0D]\nE       \t(No symbol) [0x00F7BAF8]\nE       \t(No symbol) [0x00F7BC99]\nE       \t(No symbol) [0x00F6E530]\nE       \tBaseThreadInitThunk [0x76747BA9+25]\nE       \tRtlInitializeExceptionChain [0x77D9C28B+107]\nE       \tRtlClearBits [0x77D9C20F+191]\n\nC:\\Users\\steve\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "attachments": [{"name": "screenshot_error", "source": "be182696-1679-4198-8574-a3cee37af5df-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "2095e0be-1fef-427d-9458-62913ea75ce9-attachment.txt", "type": "text/plain"}], "start": 1741724017800, "stop": 1741724054642, "uuid": "bb4da6fb-3ed9-4412-89ca-5f045fc5583a", "historyId": "d748beaf6fad1e111f7d9a77bacf0bc1", "testCaseId": "d748beaf6fad1e111f7d9a77bacf0bc1", "fullName": "test_2_Ordenamientos#test_AccesoNominas", "labels": [{"name": "feature", "value": "Nominas Test"}, {"name": "suite", "value": "test_2_Ordenamientos"}, {"name": "host", "value": "Steven"}, {"name": "thread", "value": "18492-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_2_Ordenamientos"}]}